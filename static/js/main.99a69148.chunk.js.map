{"version":3,"sources":["components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarBody/CalendarBody.js","components/Calendar/Calendar.js","components/View/Day/Day.js","components/View/View.js","components/NoteList/NoteList.js","components/Actions/Actions.js","components/AddNote/AddNote.js","components/NotesSearch/NoteSearch.js","App.js","index.js"],"names":["CalendarHeader","weakDays","className","map","day","key","CalendarBody","month","year","onChange","getDay","daysNumber","Date","getDate","monthdays","Array","from","length","item","index","fistDayOfWeek","restDays","Math","floor","endEmptyCells","emptyCells","_","type","id","onClick","onDoubleClick","e","target","defaultProps","Calendar","selectDay","monthes","Day","date","neededDayOfWeek","arrOfHours","el","hour","Veiw","selectVeiw","monthElement","i","startWeek","needWeek","String","NoteList","notes","onDelete","note","Actions","handleChange","event","props","changeYear","Number","value","handleMonthChange","changeMonth","handlePrev","handleNext","this","mon","Component","AddNote","state","inputText","handleSubmit","preventDefault","string","onAddNote","setState","onSubmit","placeholder","NoteSearch","onChangeFilter","d","selectBtn","dateNow","today","toDateString","split","dayOfWeek","App","getMonth","getFullYear","query","addNote","prevState","selected","veiw","changeDate","currentDate","handleSearch","resetToCurrentDate","deleteNote","current","filter","persistedNotes","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredNotes","filterToLowerCase","toLowerCase","includes","filterNotes","select","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99a69148.chunk.js","sourcesContent":["import React from 'react';\nimport './CalendarHeader.scss';\n\nimport PropTypes from 'prop-types';\n\nconst CalendarHeader = ({ weakDays }) => (\n  <div className=\"calendar__head\">\n    {weakDays\n      .map(day => <div key={day} className=\"calendar__cell\">{day}</div>)}\n  </div>\n);\n\nCalendarHeader.propTypes = {\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nexport default CalendarHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CalendarBody.scss';\n\nconst CalendarBody = ({ month, year, onChange, getDay }) => {\n  const daysNumber = new Date(year, month, 0).getDate();\n  const monthdays = Array.from(\n    { length: [daysNumber] }, (item, index) => index + 1,\n  );\n  let fistDayOfWeek = new Date(`${year}-${month}-01`).getDay();\n\n  if (fistDayOfWeek === 0) {\n    fistDayOfWeek = 7;\n  }\n\n  const fullWeek = Math.floor((daysNumber - fistDayOfWeek - 1) / 7);\n  const restDays = daysNumber - fullWeek * 7 - (7 - fistDayOfWeek - 1) - 7;\n  const endEmptyCells = Array.from(\n    { length: [restDays] }, (item, index) => index + 1,\n  );\n  const emptyCells = Array.from(\n    { length: [fistDayOfWeek - 1] }, (_, index) => index + 1,\n  );\n\n  return (\n    <div className=\"calendar-section\">\n      {emptyCells.map(\n        day => <div key={day} className=\"calendar__cell\">{' '}</div>,\n      )}\n      {monthdays.map(\n        (day, index) => (\n          <button\n            type=\"button\"\n            id={index + 1}\n            key={day}\n            className=\"calendar__cell\"\n            onClick={onChange}\n            onDoubleClick={e => getDay(e.target.id)}\n          >\n            {day}\n          </button>\n        ),\n      )}\n      {endEmptyCells.map(\n        day => <div key={day} className=\"calendar__cell\">{' '}</div>,\n      )}\n    </div>\n  );\n};\n\nCalendarBody.propTypes = {\n  month: PropTypes.number,\n  year: PropTypes.number,\n  onChange: PropTypes.func,\n  getDay: PropTypes.func,\n};\n\nCalendarBody.defaultProps = {\n  month: null,\n  year: null,\n  onChange: () => {},\n  getDay: () => {},\n};\n\nexport default CalendarBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CalendarHeader from './CalendarHeader/CalendarHeader';\nimport CalendarBody from './CalendarBody/CalendarBody';\n\nimport './Calendar.scss';\n\nconst Calendar = (\n  { month, year, weakDays, getDay, selectDay, monthes, onChange },\n) => (\n  <div className=\"calendar\">\n    <CalendarHeader weakDays={weakDays} />\n    <CalendarBody\n      month={month}\n      year={year}\n      getDay={getDay}\n      selectDay={selectDay}\n      onChange={onChange}\n    />\n  </div>\n);\n\nCalendar.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  monthes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  onChange: PropTypes.func,\n  selectDay: PropTypes.number,\n  getDay: PropTypes.func,\n};\n\nCalendar.defaultProps = {\n  onChange: () => {},\n  selectDay: null,\n  getDay: () => {},\n};\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Day.scss';\n\nexport const Day = ({ date, neededDayOfWeek, weakDays }) => {\n  const hours = 24;\n  const arrOfHours = Array.from({ length: [hours] }, (el, index) => index + 1);\n\n  return (\n    <>\n      <div className=\"selected-day\">\n        <div className=\"selected-day__date\">{date}</div>\n        <div className=\"selected-day__day-of-week\">\n          {weakDays[neededDayOfWeek - 1]}\n        </div>\n      </div>\n      <ul className=\"day-list\">\n        {arrOfHours.map(hour => (\n          <li key={hour + 1} className=\"day-list__item\">\n            <span className=\"day-list__hour\">\n              {hour}\n            :\n            00\n            </span>\n            <input className=\"day-list__input\" />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nDay.propTypes = {\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  date: PropTypes.number.isRequired,\n  neededDayOfWeek: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Calendar from '../Calendar/Calendar';\nimport CalendarHeader from '../Calendar/CalendarHeader/CalendarHeader';\nimport { Day } from './Day/Day';\nimport './View.scss';\n\nexport const Veiw = (\n  { month, year, weakDays, monthes, selectVeiw, date, neededDayOfWeek },\n) => {\n  if (selectVeiw === 'Day') {\n    return (\n      <Day\n        date={date}\n        neededDayOfWeek={neededDayOfWeek}\n        weakDays={weakDays}\n      />\n    );\n  }\n\n  if (selectVeiw === 'Month') {\n    return (\n      <Calendar\n        month={month}\n        year={year}\n        weakDays={weakDays}\n        monthes={monthes}\n      />\n    );\n  }\n\n  if (selectVeiw === 'Year') {\n    return (\n      monthes.map((monthElement, i) => (\n        <div key={monthElement}>\n          <h3>{monthElement}</h3>\n          <Calendar\n            month={i + 1}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n          />\n        </div>\n      ))\n    );\n  }\n\n  if (selectVeiw === 'Week') {\n    const daysNumber = new Date(year, month, 0).getDate();\n    const startWeek = date - (neededDayOfWeek - 1);\n    const needWeek = Array.from(\n      { length: 7 }, (item, index) => index,\n    ).map(day => (\n      day + startWeek > 0 && day + startWeek <= daysNumber\n        ? day + startWeek\n        : ''\n    ));\n\n    return (\n      <div className=\"calendar calendar-week\">\n        <CalendarHeader weakDays={weakDays} />\n        <div className=\"calendar__week\">\n          {needWeek.map((day, index) => (\n            <div key={String(index)} className=\"calendar__cell\">\n              {day}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return '';\n};\n\nVeiw.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  monthes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  selectVeiw: PropTypes.string.isRequired,\n  date: PropTypes.number.isRequired,\n  neededDayOfWeek: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NoteList.scss\";\n\nconst NoteList = ({ notes, onDelete }) => (\n  <ul className=\"notes\">\n    {notes.map(note => (\n      <li key={note} className=\"notes__item\">\n        {note}\n        <button\n          type=\"button\"\n          className=\"notes__delete\"\n          onClick={() => onDelete(note)}\n        >\n          x\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nNoteList.propTypes = {\n  notes: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default NoteList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Actions.scss';\n\nexport class Actions extends Component {\n    static propTypes = {\n      changeYear: PropTypes.func.isRequired,\n      changeMonth: PropTypes.func.isRequired,\n      month: PropTypes.number.isRequired,\n      year: PropTypes.number.isRequired,\n      monthes: PropTypes.arrayOf(\n        PropTypes.string.isRequired,\n      ).isRequired,\n    }\n\n    handleChange = (event) => {\n      this.props.changeYear(Number(event.target.value));\n    }\n\n    handleMonthChange = (event) => {\n      this.props.changeMonth(Number(event.target.value));\n    }\n\n    handlePrev = () => {\n      const { month, year } = this.props;\n\n      if (month === 1) {\n        this.props.changeYear(year - 1);\n        this.props.changeMonth(12);\n      } else {\n        this.props.changeMonth(month - 1);\n      }\n    }\n\n      handleNext = () => {\n\n        const { month, year } = this.props;\n\n        if (month === 12) {\n          this.props.changeYear(year + 1);\n          this.props.changeMonth(1);\n        } else {\n          this.props.changeMonth(month + 1);\n        }\n      }\n\n      render() {\n        const { monthes, month, year } = this.props;\n\n        return (\n          <div className=\"action\">\n            <input\n              type=\"number\"\n              value={year}\n              onChange={this.handleChange}\n              className=\"action__input\"\n            />\n            <button\n              type=\"button\"\n              onClick={this.handlePrev}\n              className=\"action__button\"\n            >\n              {`<`}\n            </button>\n            <select\n              value={month}\n              onChange={this.handleMonthChange}\n              className=\"action__select\"\n            >\n              {monthes.map((mon, index) => (\n                <option value={index + 1} key={mon}>{mon}</option>\n              ))}\n            </select>\n            <button\n              type=\"button\"\n              onClick={this.handleNext}\n              className=\"action__button\"\n            >\n              {`>`}\n            </button>\n          </div>\n        );\n      }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class AddNote extends Component {\n  static propTypes = {\n    selectDay: PropTypes.number.isRequired,\n    month: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    onAddNote: PropTypes.func.isRequired,\n  }\n\n state = {\n   inputText: '',\n }\n\n handleSubmit = (e) => {\n   e.preventDefault();\n   const { selectDay, month, year } = this.props;\n   const string = `${selectDay} ${month} ${year} ${this.state.inputText}`;\n\n   this.props.onAddNote(string);\n   this.setState({\n     inputText: '',\n   });\n }\n\n handleChange = (e) => {\n   this.setState({\n     inputText: e.target.value,\n   });\n }\n\n render() {\n   const { selectDay, month, year } = this.props;\n   const { inputText } = this.state;\n\n   return (\n     <>\n       <form onSubmit={this.handleSubmit} className=\"current-month__form\">\n         <span>{`${selectDay} ${month} ${year} `}</span>\n         <input\n           type=\"text\"\n           value={inputText}\n           placeholder=\"input task...\"\n           onChange={this.handleChange}\n         />\n         <button type=\"submit\">Add</button>\n       </form>\n     </>\n   );\n }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NoteSearch = ({ onChangeFilter }) => (\n  <label>\n    <input\n      type=\"text\"\n      d=\"search-query\"\n      className=\"input\"\n      placeholder=\"Type search word\"\n      onChange={onChangeFilter}\n    />\n  </label>\n);\n\nNoteSearch.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default NoteSearch;\n","import React from 'react';\nimport './App.scss';\nimport { Veiw } from './components/View/View';\nimport NoteList from './components/NoteList/NoteList';\nimport Calendar from './components/Calendar/Calendar';\nimport { Actions } from './components/Actions/Actions';\nimport AddNote from './components/AddNote/AddNote';\nimport NoteSearch from './components/NotesSearch/NoteSearch';\n\nconst weakDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\nconst monthes = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nconst selectBtn = ['Day', 'Week', 'Month', 'Year'];\n\nconst dateNow = new Date();\nlet today = new Date().toDateString().split(' ');\n\ntoday = Number(today[today.length - 2]);\n\nlet dayOfWeek = new Date().getDay();\n\nif (dayOfWeek === 0) {\n  dayOfWeek = 7;\n}\n\nconst filterNotes = (notes, filter) => {\n  const filterToLowerCase = filter.toLowerCase();\n\n  return notes.filter(\n    note => note.toLowerCase().includes(filterToLowerCase),\n  );\n};\n\nexport default class App extends React.Component {\n  state = {\n    month: dateNow.getMonth() + 1,\n    year: dateNow.getFullYear(),\n    selectVeiw: 'Day',\n    selectDay: new Date().getDate(),\n    notes: [],\n    date: today,\n    neededDayOfWeek: dayOfWeek,\n    query: '',\n  };\n\n  componentDidMount() {\n    const persistedNotes = localStorage.getItem('notes');\n\n    if (persistedNotes) {\n      const notes = JSON.parse(persistedNotes);\n\n      this.setState({ notes });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.notes !== this.state.notes) {\n      localStorage.setItem('notes', JSON.stringify(this.state.notes));\n    }\n  }\n\n  getDay = (id) => {\n    this.setState({\n      selectDay: id,\n    });\n  };\n\n  addNote = (note) => {\n    this.setState(prevState => ({\n      notes: [...prevState.notes, note],\n    }));\n  };\n\n  selected = (event) => {\n    const veiw = event.target.value;\n\n    this.setState({\n      selectVeiw: veiw,\n    });\n  };\n\n  changeMonth = (month) => {\n    this.setState({\n      month,\n    });\n  };\n\n  changeYear = (year) => {\n    this.setState({\n      year,\n    });\n  };\n\n  changeDate = (event) => {\n    const { month, year } = this.state;\n    const date = Number(event.target.id);\n    let currentDate = Number(new Date(year, month - 1, +date).getDay());\n\n    if (currentDate === 0) {\n      currentDate = 7;\n    }\n\n    this.setState({\n      date,\n      neededDayOfWeek: currentDate,\n    });\n  };\n\n  handleSearch = (e) => {\n    this.setState({\n      query: e.target.value,\n    });\n  }\n\n  resetToCurrentDate = () => {\n    this.setState({\n      month: dateNow.getMonth() + 1,\n      year: dateNow.getFullYear(),\n      date: dateNow.getDate(),\n      neededDayOfWeek: dayOfWeek,\n    });\n  };\n\n  deleteNote = (current) => {\n    this.setState(prevState => ({\n      notes: prevState.notes.filter(note => note !== current),\n    }));\n  };\n\n  render() {\n    const {\n      month,\n      year,\n      selectVeiw,\n      selectDay,\n      notes,\n      date,\n      neededDayOfWeek,\n      query,\n    } = this.state;\n    const filteredNotes = filterNotes(notes, query);\n\n    return (\n      <div className=\"App\">\n        <div className=\"current-month\">\n          <Actions\n            monthes={monthes}\n            year={year}\n            month={month}\n            changeMonth={this.changeMonth}\n            changeYear={this.changeYear}\n          />\n          <Calendar\n            month={month}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n            getDay={this.getDay}\n            selectDay={+selectDay}\n            onChange={this.changeDate}\n          />\n          <button\n            className=\"button-reset\"\n            type=\"button\"\n            onClick={this.resetToCurrentDate}\n          >\n            Current Month\n          </button>\n          <NoteSearch onChangeFilter={this.handleSearch} />\n          <NoteList notes={filteredNotes} onDelete={this.deleteNote} />\n        </div>\n        <div className=\"list-of-months\">\n          <select onChange={this.selected} className=\"list-of-months__select\">\n            {selectBtn.map(select => (\n              <option value={select} key={select}>\n                {select}\n              </option>\n            ))}\n          </select>\n          <Veiw\n            month={month}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n            selectVeiw={selectVeiw}\n            date={date}\n            neededDayOfWeek={neededDayOfWeek}\n          />\n        </div>\n        <AddNote\n          selectDay={+selectDay}\n          month={monthes[month - 1]}\n          year={year}\n          onAddNote={this.addNote}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}