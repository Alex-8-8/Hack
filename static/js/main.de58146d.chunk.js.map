{"version":3,"sources":["components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarBody/CalendarBody.js","components/Calendar/Calendar.js","components/View/View.js","components/Actions/Actions.js","App.js","index.js"],"names":["CalendarHeader","weakDays","className","map","day","key","CalendarBody","month","year","daysNumber","Date","getDate","monthdays","Array","from","length","item","index","fistDayOfWeek","getDay","restDays","Math","floor","endEmptyCells","emptyCells","_","id","Calendar","monthes","Veiw","selectVeiw","monthElement","i","today","toDateString","split","startWeek","Number","needWeek","Actions","handleChange","event","props","changeYear","target","value","handleMonthChange","changeMonth","handlePrev","handleNext","this","type","onChange","onClick","mon","Component","selectBtn","dateNow","App","state","getMonth","getFullYear","selected","veiw","setState","resetToCurrentDate","select","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de58146d.chunk.js","sourcesContent":["import React from 'react';\nimport './CalendarHeader.scss';\n\nimport PropTypes from 'prop-types';\n\nconst CalendarHeader = ({ weakDays }) => (\n  <div className=\"calendar__head\">\n    {weakDays\n      .map(day => <div key={day} className=\"calendar__cell\">{day}</div>)}\n  </div>\n);\n\nCalendarHeader.propTypes = {\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nexport default CalendarHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CalendarBody.scss';\nconst CalendarBody = ({ month, year }) => {\n  const daysNumber = new Date(year, month, 0).getDate();\n  const monthdays = Array.from(\n    { length: [daysNumber] }, (item, index) => index + 1,\n  );\n  let fistDayOfWeek = new Date(`${year}-${month}-01`).getDay();\n  if (fistDayOfWeek === 0) {\n    fistDayOfWeek = 7;\n  }\n  const fullWeek = Math.floor((daysNumber - fistDayOfWeek - 1) / 7);\n  const restDays = daysNumber - fullWeek * 7 - (7 - fistDayOfWeek - 1) - 7;\n  const endEmptyCells = Array.from(\n    { length: [restDays] }, (item, index) => index + 1,\n  );\n  const emptyCells = Array.from({ length: [fistDayOfWeek - 1] }, (_, index) => index + 1);\n  return (\n    <div className=\"calendar-section\">\n      {emptyCells.map(\n        day => <div key={day} className=\"calendar__cell\">{' '}</div>,\n      )}\n      {monthdays.map(\n        (day, index) => (\n          <div id={index + 1} key={day} className=\"calendar__cell\">\n            {day}\n          </div>\n        ),\n      )}\n      {endEmptyCells.map(\n        day => <div key={day} className=\"calendar__cell\">{' '}</div>,\n      )}\n    </div>\n  );\n};\nCalendarBody.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\nexport default CalendarBody;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CalendarHeader from './CalendarHeader/CalendarHeader';\nimport CalendarBody from './CalendarBody/CalendarBody';\n\nimport './Calendar.scss';\n\nconst Calendar = ({ month, year, weakDays, monthes }) => (\n  <div className=\"calendar\">\n    <CalendarHeader weakDays={weakDays} />\n    <CalendarBody month={month} year={year} />\n  </div>\n);\n\nCalendar.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  monthes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Calendar from '../Calendar/Calendar';\nimport CalendarHeader from '../Calendar/CalendarHeader/CalendarHeader';\nimport './View.scss';\n\nexport const Veiw = ({ month, year, weakDays, monthes, selectVeiw }) => {\n  if (selectVeiw === 'Day') {\n    return (\n      <Calendar\n        month={month}\n        year={year}\n        weakDays={weakDays}\n        monthes={monthes}\n      />\n    );\n  }\n\n  if (selectVeiw === 'Month') {\n    return (\n      <Calendar\n        month={month}\n        year={year}\n        weakDays={weakDays}\n        monthes={monthes}\n      />\n    );\n  }\n\n  if (selectVeiw === 'Year') {\n    return (\n      monthes.map((monthElement, i) => (\n        <div key={monthElement}>\n          <Calendar\n            month={i + 1}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n          />\n        </div>\n      ))\n    );\n  }\n\n  if (selectVeiw === 'Week') {\n    let today = new Date().toDateString().split(' ');\n\n    today = Number(today[today.length - 2]);\n\n    // let dayOfWeek = new Date(year, month, today).getDay();\n    const dayOfWeek = new Date().getDay();\n    const startWeek = today - (dayOfWeek - 1);\n    const needWeek = Array.from(\n      { length: 7 }, (item, index) => index,\n    ).map(day => day + startWeek);\n\n    return (\n      <div className=\"calendar calendar-week\">\n        <CalendarHeader weakDays={weakDays} />\n        <div className=\"calendar__week\">\n          {needWeek.map(day => (\n            <div key={day} className=\"calendar__cell\">\n              {day}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return '';\n};\n\nVeiw.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  weakDays: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  monthes: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  selectVeiw: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Actions.scss';\n\nexport class Actions extends Component {\n    static propTypes = {\n      changeYear: PropTypes.func.isRequired,\n      changeMonth: PropTypes.func.isRequired,\n      month: PropTypes.number.isRequired,\n      year: PropTypes.number.isRequired,\n      monthes: PropTypes.arrayOf(\n        PropTypes.string.isRequired,\n      ).isRequired,\n    }\n\n    handleChange = (event) => {\n      this.props.changeYear(Number(event.target.value));\n    }\n\n    handleMonthChange = (event) => {\n      this.props.changeMonth(Number(event.target.value));\n    }\n\n    handlePrev = () => {\n      const { month, year } = this.props;\n\n      if (month === 1) {\n        this.props.changeYear(year - 1);\n        this.props.changeMonth(12);\n      } else {\n        this.props.changeMonth(month - 1);\n      }\n    }\n\n      handleNext = () => {\n\n        const { month, year } = this.props;\n\n        if (month === 12) {\n          this.props.changeYear(year + 1);\n          this.props.changeMonth(1);\n        } else {\n          this.props.changeMonth(month + 1);\n        }\n      }\n\n      render() {\n        const { monthes, month, year } = this.props;\n\n        return (\n          <div className=\"action\">\n            <input\n              type=\"number\"\n              value={year}\n              onChange={this.handleChange}\n              className=\"action__input\"\n            />\n            <button\n              type=\"button\"\n              onClick={this.handlePrev}\n              className=\"action__button\"\n            >\n              {`<`}\n            </button>\n            <select\n              value={month}\n              onChange={this.handleMonthChange}\n              className=\"action__select\"\n            >\n              {monthes.map((mon, index) => (\n                <option value={index + 1} key={mon}>{mon}</option>\n              ))}\n            </select>\n            <button\n              type=\"button\"\n              onClick={this.handleNext}\n              className=\"action__button\"\n            >\n              {`>`}\n            </button>\n          </div>\n        );\n      }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Veiw } from './components/View/View';\n\nimport Calendar from './components/Calendar/Calendar';\nimport { Year } from './components/Year/Year';\nimport { Actions } from './components/Actions/Actions';\n\nconst weakDays = ['mon', 'tue', 'wed', 'thurs', 'fri', 'sat', 'sun'];\nconst monthes = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December',\n];\nconst selectBtn = ['Day', 'Week', 'Month', 'Year'];\n\nconst dateNow = new Date();\n\nexport default class App extends React.Component {\n  state = {\n    month: dateNow.getMonth() + 1,\n    year: dateNow.getFullYear(),\n    selectVeiw: 'Day',\n  }\n\n  selected = (event) => {\n    const veiw = event.target.value;\n\n    this.setState({\n      selectVeiw: veiw,\n    });\n  }\n\n  changeMonth = (month) => {\n    this.setState({\n      month,\n    });\n  }\n\n  changeYear = (year) => {\n    this.setState({\n      year,\n    });\n  }\n\n  resetToCurrentDate = () => {\n    this.setState({\n      month: dateNow.getMonth() + 1,\n      year: dateNow.getFullYear(),\n    });\n  }\n\n  render() {\n    const { month, year, selectVeiw } = this.state;\n\n    return (\n      <div className=\"App\">\n      {/* <select onChange={this.selected}>\n          {selectBtn.map(\n            select => <option value={select} key={select}>{select}</option>,\n          )}\n        </select> */}\n\n        <div className=\"current-month\">\n          <Actions\n            monthes={monthes}\n            year={year}\n            month={month}\n            changeMonth={this.changeMonth}\n            changeYear={this.changeYear}\n          />\n          <Calendar\n            month={month}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n          />\n          <button\n            className=\"button-reset\"\n            type=\"button\"\n            onClick={this.resetToCurrentDate}\n          >\n            Current Month\n          </button>\n        </div>\n        <div className=\"list-of-months\">\n          <select onChange={this.selected} className=\"list-of-months__select\">\n            {selectBtn.map(\n              select => <option value={select} key={select}>{select}</option>,\n            )}\n          </select>\n          <Veiw\n            month={month}\n            year={year}\n            weakDays={weakDays}\n            monthes={monthes}\n            selectVeiw={selectVeiw}\n          />\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}